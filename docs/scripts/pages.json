[{"name":"BOTH(\"\")","description":"io.github.uinnn.instructor.SenderType.BOTH","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-b-o-t-h/index.html","searchKeys":["BOTH","BOTH(\"\")","io.github.uinnn.instructor.SenderType.BOTH"]},{"name":"CONSOLE(\"§cApenas o console pode executar este comando.\")","description":"io.github.uinnn.instructor.SenderType.CONSOLE","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-c-o-n-s-o-l-e/index.html","searchKeys":["CONSOLE","CONSOLE(\"§cApenas o console pode executar este comando.\")","io.github.uinnn.instructor.SenderType.CONSOLE"]},{"name":"PLAYER(\"§cApenas jogadores podem executar este comando.\")","description":"io.github.uinnn.instructor.SenderType.PLAYER","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-p-l-a-y-e-r/index.html","searchKeys":["PLAYER","PLAYER(\"§cApenas jogadores podem executar este comando.\")","io.github.uinnn.instructor.SenderType.PLAYER"]},{"name":"abstract fun validate(sender: CommandSender): Boolean","description":"io.github.uinnn.instructor.SenderType.validate","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/validate.html","searchKeys":["validate","abstract fun validate(sender: CommandSender): Boolean","io.github.uinnn.instructor.SenderType.validate"]},{"name":"abstract val command: String","description":"io.github.uinnn.instructor.Argumentable.command","location":"instructor-framework/io.github.uinnn.instructor/-argumentable/command.html","searchKeys":["command","abstract val command: String","io.github.uinnn.instructor.Argumentable.command"]},{"name":"abstract val console: ConsoleCommandSender","description":"io.github.uinnn.instructor.InstructorPerformer.console","location":"instructor-framework/io.github.uinnn.instructor/-instructor-performer/console.html","searchKeys":["console","abstract val console: ConsoleCommandSender","io.github.uinnn.instructor.InstructorPerformer.console"]},{"name":"abstract val isConsole: Boolean","description":"io.github.uinnn.instructor.InstructorPerformer.isConsole","location":"instructor-framework/io.github.uinnn.instructor/-instructor-performer/is-console.html","searchKeys":["isConsole","abstract val isConsole: Boolean","io.github.uinnn.instructor.InstructorPerformer.isConsole"]},{"name":"abstract val isPlayer: Boolean","description":"io.github.uinnn.instructor.InstructorPerformer.isPlayer","location":"instructor-framework/io.github.uinnn.instructor/-instructor-performer/is-player.html","searchKeys":["isPlayer","abstract val isPlayer: Boolean","io.github.uinnn.instructor.InstructorPerformer.isPlayer"]},{"name":"abstract val player: Player","description":"io.github.uinnn.instructor.InstructorPerformer.player","location":"instructor-framework/io.github.uinnn.instructor/-instructor-performer/player.html","searchKeys":["player","abstract val player: Player","io.github.uinnn.instructor.InstructorPerformer.player"]},{"name":"abstract var alternates: HashSet<Instructor>","description":"io.github.uinnn.instructor.Instructable.alternates","location":"instructor-framework/io.github.uinnn.instructor/-instructable/alternates.html","searchKeys":["alternates","abstract var alternates: HashSet<Instructor>","io.github.uinnn.instructor.Instructable.alternates"]},{"name":"abstract var arguments: Array<out String>","description":"io.github.uinnn.instructor.Argumentable.arguments","location":"instructor-framework/io.github.uinnn.instructor/-argumentable/arguments.html","searchKeys":["arguments","abstract var arguments: Array<out String>","io.github.uinnn.instructor.Argumentable.arguments"]},{"name":"abstract var performer: Performer","description":"io.github.uinnn.instructor.Instructable.performer","location":"instructor-framework/io.github.uinnn.instructor/-instructable/performer.html","searchKeys":["performer","abstract var performer: Performer","io.github.uinnn.instructor.Instructable.performer"]},{"name":"abstract var senderType: SenderType","description":"io.github.uinnn.instructor.Instructable.senderType","location":"instructor-framework/io.github.uinnn.instructor/-instructable/sender-type.html","searchKeys":["senderType","abstract var senderType: SenderType","io.github.uinnn.instructor.Instructable.senderType"]},{"name":"class Instructor(name: String) : Command, Instructable","description":"io.github.uinnn.instructor.Instructor","location":"instructor-framework/io.github.uinnn.instructor/-instructor/index.html","searchKeys":["Instructor","class Instructor(name: String) : Command, Instructable","io.github.uinnn.instructor.Instructor"]},{"name":"class InstructorError(message: String) : Exception","description":"io.github.uinnn.instructor.InstructorError","location":"instructor-framework/io.github.uinnn.instructor/-instructor-error/index.html","searchKeys":["InstructorError","class InstructorError(message: String) : Exception","io.github.uinnn.instructor.InstructorError"]},{"name":"class StandardInstructorPerformer(sender: CommandSender, command: String, arguments: Array<out String>) : InstructorPerformer","description":"io.github.uinnn.instructor.StandardInstructorPerformer","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/index.html","searchKeys":["StandardInstructorPerformer","class StandardInstructorPerformer(sender: CommandSender, command: String, arguments: Array<out String>) : InstructorPerformer","io.github.uinnn.instructor.StandardInstructorPerformer"]},{"name":"enum SenderType : Enum<SenderType> ","description":"io.github.uinnn.instructor.SenderType","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/index.html","searchKeys":["SenderType","enum SenderType : Enum<SenderType> ","io.github.uinnn.instructor.SenderType"]},{"name":"fun Argumentable.array(index: Int, finalIndex: Int = lastIndex, message: String = \"§cArray não reconhecida no index $index..$finalIndex\"): Array<out String>","description":"io.github.uinnn.instructor.array","location":"instructor-framework/io.github.uinnn.instructor/array.html","searchKeys":["array","fun Argumentable.array(index: Int, finalIndex: Int = lastIndex, message: String = \"§cArray não reconhecida no index $index..$finalIndex\"): Array<out String>","io.github.uinnn.instructor.array"]},{"name":"fun Argumentable.asFluent(): FluentIterable<String>","description":"io.github.uinnn.instructor.asFluent","location":"instructor-framework/io.github.uinnn.instructor/as-fluent.html","searchKeys":["asFluent","fun Argumentable.asFluent(): FluentIterable<String>","io.github.uinnn.instructor.asFluent"]},{"name":"fun Argumentable.asIterable(): Iterable<String>","description":"io.github.uinnn.instructor.asIterable","location":"instructor-framework/io.github.uinnn.instructor/as-iterable.html","searchKeys":["asIterable","fun Argumentable.asIterable(): Iterable<String>","io.github.uinnn.instructor.asIterable"]},{"name":"fun Argumentable.asList(): List<String>","description":"io.github.uinnn.instructor.asList","location":"instructor-framework/io.github.uinnn.instructor/as-list.html","searchKeys":["asList","fun Argumentable.asList(): List<String>","io.github.uinnn.instructor.asList"]},{"name":"fun Argumentable.asSequence(): Sequence<String>","description":"io.github.uinnn.instructor.asSequence","location":"instructor-framework/io.github.uinnn.instructor/as-sequence.html","searchKeys":["asSequence","fun Argumentable.asSequence(): Sequence<String>","io.github.uinnn.instructor.asSequence"]},{"name":"fun Argumentable.boolean(index: Int, message: String = \"§cArgumento true/false não reconhecido no index $index\"): Boolean","description":"io.github.uinnn.instructor.boolean","location":"instructor-framework/io.github.uinnn.instructor/boolean.html","searchKeys":["boolean","fun Argumentable.boolean(index: Int, message: String = \"§cArgumento true/false não reconhecido no index $index\"): Boolean","io.github.uinnn.instructor.boolean"]},{"name":"fun Argumentable.byte(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Byte","description":"io.github.uinnn.instructor.byte","location":"instructor-framework/io.github.uinnn.instructor/byte.html","searchKeys":["byte","fun Argumentable.byte(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Byte","io.github.uinnn.instructor.byte"]},{"name":"fun Argumentable.double(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Double","description":"io.github.uinnn.instructor.double","location":"instructor-framework/io.github.uinnn.instructor/double.html","searchKeys":["double","fun Argumentable.double(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Double","io.github.uinnn.instructor.double"]},{"name":"fun Argumentable.float(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Float","description":"io.github.uinnn.instructor.float","location":"instructor-framework/io.github.uinnn.instructor/float.html","searchKeys":["float","fun Argumentable.float(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Float","io.github.uinnn.instructor.float"]},{"name":"fun Argumentable.gamemode(index: Int, message: String = \"§cModo de jogo não reconhecido no index $index\"): GameMode","description":"io.github.uinnn.instructor.gamemode","location":"instructor-framework/io.github.uinnn.instructor/gamemode.html","searchKeys":["gamemode","fun Argumentable.gamemode(index: Int, message: String = \"§cModo de jogo não reconhecido no index $index\"): GameMode","io.github.uinnn.instructor.gamemode"]},{"name":"fun Argumentable.int(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Int","description":"io.github.uinnn.instructor.int","location":"instructor-framework/io.github.uinnn.instructor/int.html","searchKeys":["int","fun Argumentable.int(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Int","io.github.uinnn.instructor.int"]},{"name":"fun Argumentable.join(): String","description":"io.github.uinnn.instructor.join","location":"instructor-framework/io.github.uinnn.instructor/join.html","searchKeys":["join","fun Argumentable.join(): String","io.github.uinnn.instructor.join"]},{"name":"fun Argumentable.list(index: Int, finalIndex: Int = lastIndex, message: String = \"§cLista não reconhecida no index $index..$finalIndex\"): List<String>","description":"io.github.uinnn.instructor.list","location":"instructor-framework/io.github.uinnn.instructor/list.html","searchKeys":["list","fun Argumentable.list(index: Int, finalIndex: Int = lastIndex, message: String = \"§cLista não reconhecida no index $index..$finalIndex\"): List<String>","io.github.uinnn.instructor.list"]},{"name":"fun Argumentable.long(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Long","description":"io.github.uinnn.instructor.long","location":"instructor-framework/io.github.uinnn.instructor/long.html","searchKeys":["long","fun Argumentable.long(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Long","io.github.uinnn.instructor.long"]},{"name":"fun Argumentable.lowercase(): List<String>","description":"io.github.uinnn.instructor.lowercase","location":"instructor-framework/io.github.uinnn.instructor/lowercase.html","searchKeys":["lowercase","fun Argumentable.lowercase(): List<String>","io.github.uinnn.instructor.lowercase"]},{"name":"fun Argumentable.offlinePlayer(index: Int, message: String = \"§cJogador não reconhecido no index $index\"): OfflinePlayer","description":"io.github.uinnn.instructor.offlinePlayer","location":"instructor-framework/io.github.uinnn.instructor/offline-player.html","searchKeys":["offlinePlayer","fun Argumentable.offlinePlayer(index: Int, message: String = \"§cJogador não reconhecido no index $index\"): OfflinePlayer","io.github.uinnn.instructor.offlinePlayer"]},{"name":"fun Argumentable.optionalArray(index: Int, finalIndex: Int = lastIndex): Array<out String>?","description":"io.github.uinnn.instructor.optionalArray","location":"instructor-framework/io.github.uinnn.instructor/optional-array.html","searchKeys":["optionalArray","fun Argumentable.optionalArray(index: Int, finalIndex: Int = lastIndex): Array<out String>?","io.github.uinnn.instructor.optionalArray"]},{"name":"fun Argumentable.optionalBoolean(index: Int): Boolean?","description":"io.github.uinnn.instructor.optionalBoolean","location":"instructor-framework/io.github.uinnn.instructor/optional-boolean.html","searchKeys":["optionalBoolean","fun Argumentable.optionalBoolean(index: Int): Boolean?","io.github.uinnn.instructor.optionalBoolean"]},{"name":"fun Argumentable.optionalByte(index: Int): Byte?","description":"io.github.uinnn.instructor.optionalByte","location":"instructor-framework/io.github.uinnn.instructor/optional-byte.html","searchKeys":["optionalByte","fun Argumentable.optionalByte(index: Int): Byte?","io.github.uinnn.instructor.optionalByte"]},{"name":"fun Argumentable.optionalDouble(index: Int): Double?","description":"io.github.uinnn.instructor.optionalDouble","location":"instructor-framework/io.github.uinnn.instructor/optional-double.html","searchKeys":["optionalDouble","fun Argumentable.optionalDouble(index: Int): Double?","io.github.uinnn.instructor.optionalDouble"]},{"name":"fun Argumentable.optionalFloat(index: Int): Float?","description":"io.github.uinnn.instructor.optionalFloat","location":"instructor-framework/io.github.uinnn.instructor/optional-float.html","searchKeys":["optionalFloat","fun Argumentable.optionalFloat(index: Int): Float?","io.github.uinnn.instructor.optionalFloat"]},{"name":"fun Argumentable.optionalGamemode(index: Int): GameMode?","description":"io.github.uinnn.instructor.optionalGamemode","location":"instructor-framework/io.github.uinnn.instructor/optional-gamemode.html","searchKeys":["optionalGamemode","fun Argumentable.optionalGamemode(index: Int): GameMode?","io.github.uinnn.instructor.optionalGamemode"]},{"name":"fun Argumentable.optionalInt(index: Int): Int?","description":"io.github.uinnn.instructor.optionalInt","location":"instructor-framework/io.github.uinnn.instructor/optional-int.html","searchKeys":["optionalInt","fun Argumentable.optionalInt(index: Int): Int?","io.github.uinnn.instructor.optionalInt"]},{"name":"fun Argumentable.optionalList(index: Int, finalIndex: Int = lastIndex): List<String>?","description":"io.github.uinnn.instructor.optionalList","location":"instructor-framework/io.github.uinnn.instructor/optional-list.html","searchKeys":["optionalList","fun Argumentable.optionalList(index: Int, finalIndex: Int = lastIndex): List<String>?","io.github.uinnn.instructor.optionalList"]},{"name":"fun Argumentable.optionalLong(index: Int): Long?","description":"io.github.uinnn.instructor.optionalLong","location":"instructor-framework/io.github.uinnn.instructor/optional-long.html","searchKeys":["optionalLong","fun Argumentable.optionalLong(index: Int): Long?","io.github.uinnn.instructor.optionalLong"]},{"name":"fun Argumentable.optionalOfflinePlayer(index: Int): OfflinePlayer?","description":"io.github.uinnn.instructor.optionalOfflinePlayer","location":"instructor-framework/io.github.uinnn.instructor/optional-offline-player.html","searchKeys":["optionalOfflinePlayer","fun Argumentable.optionalOfflinePlayer(index: Int): OfflinePlayer?","io.github.uinnn.instructor.optionalOfflinePlayer"]},{"name":"fun Argumentable.optionalPlayer(index: Int): Player?","description":"io.github.uinnn.instructor.optionalPlayer","location":"instructor-framework/io.github.uinnn.instructor/optional-player.html","searchKeys":["optionalPlayer","fun Argumentable.optionalPlayer(index: Int): Player?","io.github.uinnn.instructor.optionalPlayer"]},{"name":"fun Argumentable.optionalShort(index: Int): Short?","description":"io.github.uinnn.instructor.optionalShort","location":"instructor-framework/io.github.uinnn.instructor/optional-short.html","searchKeys":["optionalShort","fun Argumentable.optionalShort(index: Int): Short?","io.github.uinnn.instructor.optionalShort"]},{"name":"fun Argumentable.player(index: Int, message: String = \"§cJogador não reconhecido no index $index\"): Player","description":"io.github.uinnn.instructor.player","location":"instructor-framework/io.github.uinnn.instructor/player.html","searchKeys":["player","fun Argumentable.player(index: Int, message: String = \"§cJogador não reconhecido no index $index\"): Player","io.github.uinnn.instructor.player"]},{"name":"fun Argumentable.short(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Short","description":"io.github.uinnn.instructor.short","location":"instructor-framework/io.github.uinnn.instructor/short.html","searchKeys":["short","fun Argumentable.short(index: Int, message: String = \"§cArgumento numérico não reconhecido no index $index\"): Short","io.github.uinnn.instructor.short"]},{"name":"fun Argumentable.uppercase(): List<String>","description":"io.github.uinnn.instructor.uppercase","location":"instructor-framework/io.github.uinnn.instructor/uppercase.html","searchKeys":["uppercase","fun Argumentable.uppercase(): List<String>","io.github.uinnn.instructor.uppercase"]},{"name":"fun Argumentable.validate(valide: Boolean, message: String = \"§cValidação mal-sucedida.\"): Boolean","description":"io.github.uinnn.instructor.validate","location":"instructor-framework/io.github.uinnn.instructor/validate.html","searchKeys":["validate","fun Argumentable.validate(valide: Boolean, message: String = \"§cValidação mal-sucedida.\"): Boolean","io.github.uinnn.instructor.validate"]},{"name":"fun Argumentable.validateNot(valide: Boolean, message: String = \"§cValidação mal-sucedida.\"): Boolean","description":"io.github.uinnn.instructor.validateNot","location":"instructor-framework/io.github.uinnn.instructor/validate-not.html","searchKeys":["validateNot","fun Argumentable.validateNot(valide: Boolean, message: String = \"§cValidação mal-sucedida.\"): Boolean","io.github.uinnn.instructor.validateNot"]},{"name":"fun Command.toInstructor(): Instructor","description":"io.github.uinnn.instructor.common.toInstructor","location":"instructor-framework/io.github.uinnn.instructor.common/to-instructor.html","searchKeys":["toInstructor","fun Command.toInstructor(): Instructor","io.github.uinnn.instructor.common.toInstructor"]},{"name":"fun Instructable.instructor(name: String, vararg aliases: String = emptyArray(), action: InstructorAction): Instructor","description":"io.github.uinnn.instructor.instructor","location":"instructor-framework/io.github.uinnn.instructor/instructor.html","searchKeys":["instructor","fun Instructable.instructor(name: String, vararg aliases: String = emptyArray(), action: InstructorAction): Instructor","io.github.uinnn.instructor.instructor"]},{"name":"fun Instructable.instructorWith(name: String, vararg aliases: String = emptyArray(), action: Performer): Instructor","description":"io.github.uinnn.instructor.instructorWith","location":"instructor-framework/io.github.uinnn.instructor/instructor-with.html","searchKeys":["instructorWith","fun Instructable.instructorWith(name: String, vararg aliases: String = emptyArray(), action: Performer): Instructor","io.github.uinnn.instructor.instructorWith"]},{"name":"fun Instructor(name: String)","description":"io.github.uinnn.instructor.Instructor.Instructor","location":"instructor-framework/io.github.uinnn.instructor/-instructor/-instructor.html","searchKeys":["Instructor","fun Instructor(name: String)","io.github.uinnn.instructor.Instructor.Instructor"]},{"name":"fun Instructor(name: String, action: InstructorAction)","description":"io.github.uinnn.instructor.Instructor.Instructor","location":"instructor-framework/io.github.uinnn.instructor/-instructor/-instructor.html","searchKeys":["Instructor","fun Instructor(name: String, action: InstructorAction)","io.github.uinnn.instructor.Instructor.Instructor"]},{"name":"fun Instructor(name: String, vararg aliases: String)","description":"io.github.uinnn.instructor.Instructor.Instructor","location":"instructor-framework/io.github.uinnn.instructor/-instructor/-instructor.html","searchKeys":["Instructor","fun Instructor(name: String, vararg aliases: String)","io.github.uinnn.instructor.Instructor.Instructor"]},{"name":"fun Instructor(name: String, vararg aliases: String, action: InstructorAction)","description":"io.github.uinnn.instructor.Instructor.Instructor","location":"instructor-framework/io.github.uinnn.instructor/-instructor/-instructor.html","searchKeys":["Instructor","fun Instructor(name: String, vararg aliases: String, action: InstructorAction)","io.github.uinnn.instructor.Instructor.Instructor"]},{"name":"fun Instructor.attemptPerform(sender: CommandSender, name: String, args: Array<out String>): Result<Unit>","description":"io.github.uinnn.instructor.attemptPerform","location":"instructor-framework/io.github.uinnn.instructor/attempt-perform.html","searchKeys":["attemptPerform","fun Instructor.attemptPerform(sender: CommandSender, name: String, args: Array<out String>): Result<Unit>","io.github.uinnn.instructor.attemptPerform"]},{"name":"fun Instructor.register(): Boolean","description":"io.github.uinnn.instructor.register","location":"instructor-framework/io.github.uinnn.instructor/register.html","searchKeys":["register","fun Instructor.register(): Boolean","io.github.uinnn.instructor.register"]},{"name":"fun Instructor.unregister(): Any?","description":"io.github.uinnn.instructor.unregister","location":"instructor-framework/io.github.uinnn.instructor/unregister.html","searchKeys":["unregister","fun Instructor.unregister(): Any?","io.github.uinnn.instructor.unregister"]},{"name":"fun InstructorError(message: String)","description":"io.github.uinnn.instructor.InstructorError.InstructorError","location":"instructor-framework/io.github.uinnn.instructor/-instructor-error/-instructor-error.html","searchKeys":["InstructorError","fun InstructorError(message: String)","io.github.uinnn.instructor.InstructorError.InstructorError"]},{"name":"fun InstructorPerformer.send(message: Any)","description":"io.github.uinnn.instructor.send","location":"instructor-framework/io.github.uinnn.instructor/send.html","searchKeys":["send","fun InstructorPerformer.send(message: Any)","io.github.uinnn.instructor.send"]},{"name":"fun StandardInstructorPerformer(sender: CommandSender, command: String, arguments: Array<out String>)","description":"io.github.uinnn.instructor.StandardInstructorPerformer.StandardInstructorPerformer","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/-standard-instructor-performer.html","searchKeys":["StandardInstructorPerformer","fun StandardInstructorPerformer(sender: CommandSender, command: String, arguments: Array<out String>)","io.github.uinnn.instructor.StandardInstructorPerformer.StandardInstructorPerformer"]},{"name":"fun error(message: String): Nothing","description":"io.github.uinnn.instructor.error","location":"instructor-framework/io.github.uinnn.instructor/error.html","searchKeys":["error","fun error(message: String): Nothing","io.github.uinnn.instructor.error"]},{"name":"fun instructor(name: String, vararg aliases: String = emptyArray(), action: InstructorAction): Instructor","description":"io.github.uinnn.instructor.instructor","location":"instructor-framework/io.github.uinnn.instructor/instructor.html","searchKeys":["instructor","fun instructor(name: String, vararg aliases: String = emptyArray(), action: InstructorAction): Instructor","io.github.uinnn.instructor.instructor"]},{"name":"fun instructorWith(name: String, vararg aliases: String = emptyArray(), action: Performer): Instructor","description":"io.github.uinnn.instructor.instructorWith","location":"instructor-framework/io.github.uinnn.instructor/instructor-with.html","searchKeys":["instructorWith","fun instructorWith(name: String, vararg aliases: String = emptyArray(), action: Performer): Instructor","io.github.uinnn.instructor.instructorWith"]},{"name":"infix fun <T> T.or(value: T): T","description":"io.github.uinnn.instructor.common.or","location":"instructor-framework/io.github.uinnn.instructor.common/or.html","searchKeys":["or","infix fun <T> T.or(value: T): T","io.github.uinnn.instructor.common.or"]},{"name":"inline fun <T> Argumentable.map(transform: (String) -> T): List<T>","description":"io.github.uinnn.instructor.map","location":"instructor-framework/io.github.uinnn.instructor/map.html","searchKeys":["map","inline fun <T> Argumentable.map(transform: (String) -> T): List<T>","io.github.uinnn.instructor.map"]},{"name":"interface Argumentable","description":"io.github.uinnn.instructor.Argumentable","location":"instructor-framework/io.github.uinnn.instructor/-argumentable/index.html","searchKeys":["Argumentable","interface Argumentable","io.github.uinnn.instructor.Argumentable"]},{"name":"interface Instructable","description":"io.github.uinnn.instructor.Instructable","location":"instructor-framework/io.github.uinnn.instructor/-instructable/index.html","searchKeys":["Instructable","interface Instructable","io.github.uinnn.instructor.Instructable"]},{"name":"interface InstructorPerformer : Argumentable","description":"io.github.uinnn.instructor.InstructorPerformer","location":"instructor-framework/io.github.uinnn.instructor/-instructor-performer/index.html","searchKeys":["InstructorPerformer","interface InstructorPerformer : Argumentable","io.github.uinnn.instructor.InstructorPerformer"]},{"name":"open fun optionalString(index: Int): String?","description":"io.github.uinnn.instructor.Argumentable.optionalString","location":"instructor-framework/io.github.uinnn.instructor/-argumentable/optional-string.html","searchKeys":["optionalString","open fun optionalString(index: Int): String?","io.github.uinnn.instructor.Argumentable.optionalString"]},{"name":"open fun performs(action: Performer)","description":"io.github.uinnn.instructor.Instructable.performs","location":"instructor-framework/io.github.uinnn.instructor/-instructable/performs.html","searchKeys":["performs","open fun performs(action: Performer)","io.github.uinnn.instructor.Instructable.performs"]},{"name":"open fun string(index: Int, message: String = \"§cArgumento de texto não reconhecido no index $index\"): String","description":"io.github.uinnn.instructor.Argumentable.string","location":"instructor-framework/io.github.uinnn.instructor/-argumentable/string.html","searchKeys":["string","open fun string(index: Int, message: String = \"§cArgumento de texto não reconhecido no index $index\"): String","io.github.uinnn.instructor.Argumentable.string"]},{"name":"open lateinit override var performer: Performer","description":"io.github.uinnn.instructor.Instructor.performer","location":"instructor-framework/io.github.uinnn.instructor/-instructor/performer.html","searchKeys":["performer","open lateinit override var performer: Performer","io.github.uinnn.instructor.Instructor.performer"]},{"name":"open override fun execute(sender: CommandSender, name: String, args: Array<out String>): Boolean","description":"io.github.uinnn.instructor.Instructor.execute","location":"instructor-framework/io.github.uinnn.instructor/-instructor/execute.html","searchKeys":["execute","open override fun execute(sender: CommandSender, name: String, args: Array<out String>): Boolean","io.github.uinnn.instructor.Instructor.execute"]},{"name":"open override fun validate(sender: CommandSender): Boolean","description":"io.github.uinnn.instructor.SenderType.BOTH.validate","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-b-o-t-h/validate.html","searchKeys":["validate","open override fun validate(sender: CommandSender): Boolean","io.github.uinnn.instructor.SenderType.BOTH.validate"]},{"name":"open override fun validate(sender: CommandSender): Boolean","description":"io.github.uinnn.instructor.SenderType.CONSOLE.validate","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-c-o-n-s-o-l-e/validate.html","searchKeys":["validate","open override fun validate(sender: CommandSender): Boolean","io.github.uinnn.instructor.SenderType.CONSOLE.validate"]},{"name":"open override fun validate(sender: CommandSender): Boolean","description":"io.github.uinnn.instructor.SenderType.PLAYER.validate","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-p-l-a-y-e-r/validate.html","searchKeys":["validate","open override fun validate(sender: CommandSender): Boolean","io.github.uinnn.instructor.SenderType.PLAYER.validate"]},{"name":"open override val command: String","description":"io.github.uinnn.instructor.StandardInstructorPerformer.command","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/command.html","searchKeys":["command","open override val command: String","io.github.uinnn.instructor.StandardInstructorPerformer.command"]},{"name":"open override val console: ConsoleCommandSender","description":"io.github.uinnn.instructor.StandardInstructorPerformer.console","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/console.html","searchKeys":["console","open override val console: ConsoleCommandSender","io.github.uinnn.instructor.StandardInstructorPerformer.console"]},{"name":"open override val isConsole: Boolean","description":"io.github.uinnn.instructor.StandardInstructorPerformer.isConsole","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/is-console.html","searchKeys":["isConsole","open override val isConsole: Boolean","io.github.uinnn.instructor.StandardInstructorPerformer.isConsole"]},{"name":"open override val isPlayer: Boolean","description":"io.github.uinnn.instructor.StandardInstructorPerformer.isPlayer","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/is-player.html","searchKeys":["isPlayer","open override val isPlayer: Boolean","io.github.uinnn.instructor.StandardInstructorPerformer.isPlayer"]},{"name":"open override val player: Player","description":"io.github.uinnn.instructor.StandardInstructorPerformer.player","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/player.html","searchKeys":["player","open override val player: Player","io.github.uinnn.instructor.StandardInstructorPerformer.player"]},{"name":"open override var alternates: HashSet<Instructor>","description":"io.github.uinnn.instructor.Instructor.alternates","location":"instructor-framework/io.github.uinnn.instructor/-instructor/alternates.html","searchKeys":["alternates","open override var alternates: HashSet<Instructor>","io.github.uinnn.instructor.Instructor.alternates"]},{"name":"open override var arguments: Array<out String>","description":"io.github.uinnn.instructor.StandardInstructorPerformer.arguments","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/arguments.html","searchKeys":["arguments","open override var arguments: Array<out String>","io.github.uinnn.instructor.StandardInstructorPerformer.arguments"]},{"name":"open override var senderType: SenderType","description":"io.github.uinnn.instructor.Instructor.senderType","location":"instructor-framework/io.github.uinnn.instructor/-instructor/sender-type.html","searchKeys":["senderType","open override var senderType: SenderType","io.github.uinnn.instructor.Instructor.senderType"]},{"name":"operator fun Argumentable.contains(index: Int): Boolean","description":"io.github.uinnn.instructor.contains","location":"instructor-framework/io.github.uinnn.instructor/contains.html","searchKeys":["contains","operator fun Argumentable.contains(index: Int): Boolean","io.github.uinnn.instructor.contains"]},{"name":"val Argumentable.lastIndex: Int","description":"io.github.uinnn.instructor.lastIndex","location":"instructor-framework/io.github.uinnn.instructor/last-index.html","searchKeys":["lastIndex","val Argumentable.lastIndex: Int","io.github.uinnn.instructor.lastIndex"]},{"name":"val Argumentable.size: Int","description":"io.github.uinnn.instructor.size","location":"instructor-framework/io.github.uinnn.instructor/size.html","searchKeys":["size","val Argumentable.size: Int","io.github.uinnn.instructor.size"]},{"name":"val commandMap: SimpleCommandMap","description":"io.github.uinnn.instructor.commandMap","location":"instructor-framework/io.github.uinnn.instructor/command-map.html","searchKeys":["commandMap","val commandMap: SimpleCommandMap","io.github.uinnn.instructor.commandMap"]},{"name":"val knownCommands: MutableMap<*, *>","description":"io.github.uinnn.instructor.knownCommands","location":"instructor-framework/io.github.uinnn.instructor/known-commands.html","searchKeys":["knownCommands","val knownCommands: MutableMap<*, *>","io.github.uinnn.instructor.knownCommands"]},{"name":"val name: String","description":"io.github.uinnn.instructor.SenderType.BOTH.name","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-b-o-t-h/name.html","searchKeys":["name","val name: String","io.github.uinnn.instructor.SenderType.BOTH.name"]},{"name":"val name: String","description":"io.github.uinnn.instructor.SenderType.CONSOLE.name","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-c-o-n-s-o-l-e/name.html","searchKeys":["name","val name: String","io.github.uinnn.instructor.SenderType.CONSOLE.name"]},{"name":"val name: String","description":"io.github.uinnn.instructor.SenderType.PLAYER.name","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-p-l-a-y-e-r/name.html","searchKeys":["name","val name: String","io.github.uinnn.instructor.SenderType.PLAYER.name"]},{"name":"val ordinal: Int","description":"io.github.uinnn.instructor.SenderType.BOTH.ordinal","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-b-o-t-h/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.uinnn.instructor.SenderType.BOTH.ordinal"]},{"name":"val ordinal: Int","description":"io.github.uinnn.instructor.SenderType.CONSOLE.ordinal","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-c-o-n-s-o-l-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.uinnn.instructor.SenderType.CONSOLE.ordinal"]},{"name":"val ordinal: Int","description":"io.github.uinnn.instructor.SenderType.PLAYER.ordinal","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-p-l-a-y-e-r/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.uinnn.instructor.SenderType.PLAYER.ordinal"]},{"name":"val sender: CommandSender","description":"io.github.uinnn.instructor.StandardInstructorPerformer.sender","location":"instructor-framework/io.github.uinnn.instructor/-standard-instructor-performer/sender.html","searchKeys":["sender","val sender: CommandSender","io.github.uinnn.instructor.StandardInstructorPerformer.sender"]},{"name":"var message: String","description":"io.github.uinnn.instructor.SenderType.BOTH.message","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-b-o-t-h/message.html","searchKeys":["message","var message: String","io.github.uinnn.instructor.SenderType.BOTH.message"]},{"name":"var message: String","description":"io.github.uinnn.instructor.SenderType.CONSOLE.message","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-c-o-n-s-o-l-e/message.html","searchKeys":["message","var message: String","io.github.uinnn.instructor.SenderType.CONSOLE.message"]},{"name":"var message: String","description":"io.github.uinnn.instructor.SenderType.PLAYER.message","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/-p-l-a-y-e-r/message.html","searchKeys":["message","var message: String","io.github.uinnn.instructor.SenderType.PLAYER.message"]},{"name":"var message: String","description":"io.github.uinnn.instructor.SenderType.message","location":"instructor-framework/io.github.uinnn.instructor/-sender-type/message.html","searchKeys":["message","var message: String","io.github.uinnn.instructor.SenderType.message"]}]
